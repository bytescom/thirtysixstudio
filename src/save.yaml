this code is belong to canvas.jsx!!
----------------------------------
import React, { useEffect, useRef, useState } from 'react'
import canvasImages from './canvasimage';
import { useGSAP } from '@gsap/react';
import gsap from 'gsap';

const canvas = () => {
    const [index, setindex] = useState({ value: 0 });
    const canvasRef = useRef(null);


    useGSAP(() => {
        gsap.to(index, {
            value: 149,
            duration: 3,
            repeat: -1,
            ease :'linear',
            onUpdate: () => {
                setindex({ value: Math.round(index.value) });
                },
        });
    });

    useEffect(() => {
        const canvas = canvasRef.current;
        const context = canvas.getContext('2d');
        const img = new Image();
        img.src = canvasImages[index.value];
        console.log(img.src);
        
        img.onload = () => {
            canvas.width = img.width;
            canvas.height = img.height;
            context.drawImage(img, 0, 0);
        }
    });


    return (
        <canvas ref={canvasRef} className='w-[18rem] h-[18rem]' id='canvas'>

        </canvas>
    )
}

export default canvas




This code belong to App,jsx
---------------------------
<div className='relative w-full min-h-screen bg-black text-white'>
        {data[0].map((candetails, index) => (
          <Canvas details={candetails} />
        ))}
      </div>
      
      <div className='relative w-full min-h-screen bg-red-500 text-white'>
        {data[1].map((candetails, index) => (
          <Canvas details={candetails} />
        ))}
      </div>

      <div className='relative w-full min-h-screen bg-black text-white'>
        {data[2].map((candetails, index) => (
          <Canvas details={candetails} />
        ))}
      </div>

      <div className='relative w-full min-h-screen bg-red-500 text-white'>
        {data[3].map((candetails, index) => (
          <Canvas details={candetails} />
        ))}
      </div>

      <div className='relative w-full min-h-screen bg-black text-white'>
        {data[4].map((candetails, index) => (
          <Canvas details={candetails} />
        ))}
      </div>

      <div className='relative w-full min-h-screen bg-red-500 text-white'>
        {data[5].map((candetails, index) => (
          <Canvas details={candetails} />
        ))}
      </div>

